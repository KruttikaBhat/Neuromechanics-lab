All programs can be run by the command: python3 <insert program name>

summary:
Used the outputs of freMatrix.py, mtAcrossDaysPlot.py, avgTransitions.py, avgTransitions_1.py, avgTransitionsPerBlock.py, avgTransitionsPerBlock_1.py, 25-6-19_1.py, 25-6-19_2.py, 25-6-19_3.py and 25-6-19_4.py 

summary_6-7-19 and Report:
Used the outputs of 26-6-19.py, 26-6-19_exp.py, distance2.py and distance8.py



--Common programs -----------------------------------------------------
classes.py:
Includes all the class definitions. Is not a stand-alone program.


get_words.py:
Extracts the timing data and organises it into objects. These objects are stored in a pickle file called allObjects.pkl which is generated by this program. allWords.pkl contains the list of dictionary words.
To run ensure that classes.py is in the same folder. Also change the file path in line 27 of classes.py to where the timing data folder is stored. In the path name, only change upto Timing_data, everything after Timing_data should remain the same. This is done for easy data retrieval. We will be using allObjects.pkl in all the remaining programs. 

------------------------------------------------------------------------

--summary---------------------------------------------------------------

freMatrix.py:
Generates the heat map plots of all the transitions based on frequency per person and average across subjects. Saved into HeatMapTransitionMatrix. Ensure that classes.py, get_words.py, allObjects.pkl and allWords.pkl are in the same location as freMatrix.py. Also make sure that HeatMapTransitionMatrix folder exists as the program will not create a new folder but will just save the images in the indicated location.
Plots are found in HeatMapTransitionMatrix



mtAcrossDaysPlot.py:

1. Gets the frequency of all transitions for each subject and the movement times and dual times of each transition.
2. Finds the average mt for each day for each transition. Along with finding the avergae we take the ratio of the average of each day wrt to the first day (baseMT).
3. Ranks the transitions by frequency.
4. Plot the average mt and base mt for top 4 and bottom 4 transitions for each subject.
The plots are stored in MTAcrossDays.



avgTransitions.py:

1. Ranks the transitions by frequency according to the dictionary(apriori probability)
2. Gets the frequency of all transitions for each subject and the movement times and dual times of each transition.
3. Finds the average mt for each day for each transition and stores in allAvgMT
4. i) Mean and stdev are plotted across the top4 and bottom4 for each subject (avgTransitionsPerson1,..)
   ii) Mean and stdev are plotted taking across all subjects and across top4 and bottom4 (avgTransitionsAllSubjects). Averaged across subjects then across transitions.
   iii) Mean and stdev are plotted taking across all subjects and across top4 and bottom4 (avgTransitionsAllSubjects1). Averaged across transitions then across subjects.
5. Plots mean and standard deviation

These are found in correlation_1/ErrorPlots/PerDay folder

avgTransitions_1.py:

1. Ranks the transitions by frequency according to the dictionary(apriori probability)
2. Gets the frequency of all transitions for each subject and the movement times and dual times of each transition.
3. Finds the average mt for each day for each transition and stores in allAvgMT
4. i) Mean and stdev are plotted across the top4 and bottom4 for each subject (avgTransitionsPerson1,..)
   ii) Mean and stdev are plotted taking across all subjects and across top4 and bottom4 (avgTransitionsAllSubjects). Averaged across subjects then across transitions.
   iii) Mean and stdev are plotted taking across all subjects and across top4 and bottom4 (avgTransitionsAllSubjects1). Averaged across transitions then across subjects.
5. The exponential equation is also found for each subject plot and for all subjects plot as well as the drop in movement time.

These are found in correlation_1/Performance/PerDay folder


avgTransitionsPerBlock.py:
1. Ranks the transitions by frequency according to the dictionary(apriori probability)
2. Gets the frequency of all transitions for each subject and the movement times and dual times of each transition.
3. Finds the average mt for each block for each transition and stores in allAvgMT
4. i)Mean and stdev are plotted across the top4 and bottom4 for each subject 
   ii) Mean and stdev are plotted taking across all subjects and across top4 and bottom4 (avgTransitionsAllSubjectsPerBlock). Averaged across subjects then across transitions.
   iii) Mean and stdev are plotted taking across all subjects and across top4 and bottom4 (avgTransitionsAllSubjectsPerBlock1). Averaged across transitions then across subjects.

These are found in correlation_1/ErrorPlots/PerBlock folder

avgTransitionsPerBlock_1.py:
1. Ranks the transitions by frequency according to the dictionary(apriori probability)
2. Gets the frequency of all transitions for each subject and the movement times and dual times of each transition.
3. Finds the average mt for each block for each transition and stores in allAvgMT
4. i)Mean and stdev are plotted across the top4 and bottom4 for each subject 
   ii) Mean and stdev are plotted taking across all subjects and across top4 and bottom4 (avgTransitionsAllSubjectsPerBlock). Averaged across subjects then across transitions.
   iii) Mean and stdev are plotted taking across all subjects and across top4 and bottom4 (avgTransitionsAllSubjectsPerBlock1). Averaged across transitions then across subjects.
5. The exponential equation is also found for each subject plot and for all subjects plot as well as the drop in movement time.

These are found in correlation_1/Performance/PerBlock folder



25-6-19_1.py:
Exponential fit for all plots.
1. All movement times averaged across top 4 and bottom 4 across all subjects.
2. All movement times for each subject
3. Mt averaged across blocks across all subjects
4. Mt averaged across blocks for each subject
5. Mt averaged across days across all subjects
6. Mt averaged across days for each subject
7. The drops were also found
These plots are found in correlation_2/Exp/Performance


25-6-19_2.py:
Logarithimic fit for all plots.
1. All movement times averaged across top 4 and bottom 4 across all subjects.
2. All movement times for each subject
3. Mt averaged across blocks across all subjects
4. Mt averaged across blocks for each subject
5. Mt averaged across days across all subjects
6. Mt averaged across days for each subject
7. The drops were also found
These plots are found in correlation_2/Log/Performance


25-6-19_3.py:
Exponential fit for all plots.
1. All movement times averaged across top 4 and bottom 4 across all subjects.
2. All movement times for each subject
3. Mt averaged across blocks across all subjects
4. Mt averaged across blocks for each subject
5. Mt averaged across days across all subjects
6. Mt averaged across days for each subject
7. Plotted means and standard deviations
These plots are found in correlation_2/Exp/ErrorPlots


25-6-19_4.py:
Logarithmic fit for all plots.
1. All movement times averaged across top 4 and bottom 4 across all subjects.
2. All movement times for each subject
3. Mt averaged across blocks across all subjects
4. Mt averaged across blocks for each subject
5. Mt averaged across days across all subjects
6. Mt averaged across days for each subject
7. Plotted means and standard deviations
These plots are found in correlation_2/Log/ErrorPlots

--------------------------------------------------------------------------------



--summary_6-7-19 and Report----------------------------------------------------------------
26-6-19.py:
1. Plots the movement time for all mt, across blocks and across days for each transition by taking percentage difference with the first. This is fit with an logarithmic curve.
2. Finds the drop in each transition plot and plots them. A linear model is fit to these points.
3. The r squared values are saved in an excel sheet called GoF.
These are found in EachTransition 


26-6-19_exp.py:
1. Plots the movement time for all mt, across blocks and across days for each transition by taking ratio with the first. This is fit with an exponential curve.
2. Finds the drop in each transition plot and plots them. A linear model is fit to these points 
3. The percentage drops are saved in a file.
These are found in EachTransition/Exp


distance2.py:
1.Orders the transitions by distance and plots the improvement.
2.R squared values are found in GoF
Excel sheet is present in Distance

distance5.py:
Orders the transitions by distance and lists the distance, frequency and improvement in Distance1.xlsx
Excel sheet is present in Distance

distance6.py:
Averages the improvement for each distance and stores in DistanceIndividual.xlsx
Excel sheet is present in Distance

distance7.py:
Orders the transitions by frequency and lists the frequency, distance and imrovement in DistanceFrequency.xlsx
Excel sheet is present in Distance

distance8.py:
Finds the average of improvement for transitions with frequency above or below some percentile of max frequency. Inorder to change this, in line 164, 236 and 303 change the sign or value of i[2]>0.9*rank[0][1] to what you want to check. For example if you want to average improvement for all transitions in the lower 10th percentile then the line becomes i[2]<0.1*rank[0][1]. 
Puts this into DistanceIndividual1.xlsx
Excel sheet found in Distance

------------------------------------------------------------------------------

